#!/usr/bin/env bash
set -eo pipefail

# If PLUSHU_ROOT is not specially defined, use our home directory
# (or default to the home directory of the "plushu" user, if running as root)
if [[ $EUID == 0 ]]; then
  export PLUSHU_ROOT=${PLUSHU_ROOT:-~plushu}
else
  export PLUSHU_ROOT=${PLUSHU_ROOT:-$HOME}
fi

echo_missing_plushurc_msg () {
cat <<EOF
This file just needs to be present; you can create an empty one with:

\$ sudo -u plushu touch $PLUSHU_ROOT/.plushurc
EOF
}

echo_run_as_plushu_msg () {
cat <<EOF
If you meant to run plushu as the plushu user, try:

\$ sudo -iu plushu $@
EOF
}

# Source configuration variables if the config file is present -
# if the config file is not present, don't trust this as a PLUSHU_ROOT
if [[ -f $PLUSHU_ROOT/.plushurc ]]; then
  source $PLUSHU_ROOT/.plushurc

  # Ensure this is repeatable
  if [[ ! -f $PLUSHU_ROOT/.plushurc ]]; then
    echo "No $PLUSHU_ROOT/.plushurc after sourcing .plushurc" >&2
    exit 1
  fi
else
  echo "No ~/.plushurc found." >&2
  echo >&2
  if [[ "$USER" == "plushu" ]]; then
    echo_missing_plushurc_msg >&2
  else
    echo_run_as_plushu_msg >&2
  fi
  exit 1
fi

# Echo all commands if PLUSHU_TRACE is set
[[ $PLUSHU_TRACE ]] && set -x

# Handle reentrant command-as-string arguments, as used by SSH
if [[ $1 == "-c" ]]; then
  xargs -xa <(echo "$2") $0
  exit
fi

# For instances where a glob has no matches we want an empty list
shopt -s nullglob

# Run "commands" hooks for any plugins to handle
for script in $PLUSHU_ROOT/plugins/*/commands; do
  plugin_path=${script%/commands}
  PLUSHU_PLUGIN_NAME=${plugin_path#$PLUSHU_ROOT/plugins/} "$script" "$@"
done

# Run command/subcommand scripts
if [[ -x "$PLUSHU_ROOT/plugins/$1/command" ]]; then
  PLUSHU_PLUGIN_NAME=$1 "$PLUSHU_ROOT/plugins/$1/command" "$@"
elif [[ -x "$PLUSHU_ROOT/plugins/${1%%:*}/subcommands/${1#*:}" ]]; then
  PLUSHU_PLUGIN_NAME=${1%%:*} "$PLUSHU_ROOT/plugins/${1%%:*}/subcommands/${1#*:}" "$@"
fi
