#!/usr/bin/env bash
set -eo pipefail

# For instances where a glob has no matches we want an empty list
shopt -s nullglob

# Separate the hook name from the extra arguments
hookname=$1
shift

# If stdin is a terminal (as it can be when testing runhook)
if [[ -t 0 ]]; then
  # Clear the REPLY variable (no input)
  REPLY=
# If stdin is not a terminal
else
  # Save all of stdin in the default $REPLY variable
  # (discarding the non-zero exit code for reaching the end-of-file)
  read -rd '' ||:
fi

# Run a hook script, if it's executable, with the input from this invocation
exechook () {
  if [[ -f "$1" && -x "$1" ]]; then
    echo -n "$REPLY" | "$@"
  fi
}

# Run all numbered scripts under directories with this hook's name
run_numbered_hook () {
  local hookname=$1
  shift

  # Gather every file into an array, prefixing each item with the
  # filename of the script (its position in sort order)
  local filelist=()
  for hook in $PLUSHU_ROOT/plugins/*/hooks/$hookname/*; do
    filelist+=("${hook##*/} $hook")
  done

  # Use newline as separator for easy sortability
  local IFS=$'\n'

  # Sort the array numerically
  filelist=(`printf '%s\n' "${filelist[@]}" | sort -n`)

  # Call each script in sorted order
  for hookline in "${filelist[@]}"; do
    exechook ${hookline#* } "$@"
  done
}

# Ensure we have a hook name
if [[ -z "$hookname" ]]; then
  echo "runhook: missing hook name" >&2
  exit 1
fi

# Ensure we have a root directory
if [[ -z "$PLUSHU_ROOT" ]]; then
  echo "runhook: PLUSHU_ROOT not defined" >&2
  exit 1
fi

# Run ordered pre-hooks
run_numbered_hook pre-$hookname "$@"

# Run other pre-hooks
for hook in $PLUSHU_ROOT/plugins/*/hooks/pre-$hookname; do
  exechook $hook "$@"
done

# Run normal hooks
for hook in $PLUSHU_ROOT/plugins/*/hooks/$hookname; do
  exechook $hook "$@"
done

# Run ordered (post)hooks
run_numbered_hook $hookname "$@"
